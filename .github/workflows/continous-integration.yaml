name: Continuous-integration

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python and Install requirements
      uses: ./.github/actions/python-setup
    - name: Run pylint
      run: pylint src

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python and Install requirements
      uses: ./.github/actions/python-setup
    - name: Obtain data
      run: |
        dvc repro
    - name: Test with pytest
      run: |
        coverage run --source=src -m pytest --junitxml=reports/test-results.xml --html=reports/test-results.html && coverage lcov
        pytest --junitxml=tests-report.xml --cov=src --cov-report=xml
    - name: Upload test results
      uses: actions/upload-artifact@v2
      if: success() || failure()        # run this step even if previous step failed
      with:
        name: test-results
        path: reports/test-results.xml
    - name: Upload coverage report
      uses: actions/upload-artifact@v2
      if: success() || failure()        # run this step even if previous step failed
      with:
        name: coverage
        path: coverage.xml
    - name: Coveralls
      uses: coverallsapp/github-action@v2
      with:
        file: coverage.lcov
        github-token: ${{ secrets.GITHUB_TOKEN }}

  mllint:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: test-results

      - uses: actions/download-artifact@v3
        with:
          name: coverage

      - name: Set up Python and Install requirements
        uses: ./.github/actions/python-setup

      - name: Run linting
        run: mllint --output ./report.md

      - uses: actions/upload-artifact@v3
        with:
          name: mllint-report
          path: ./report.md


  create_pr_comment:
    if: github.event_name == 'pull_request'
    needs: mllint
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: mllint-report
      - uses: mshick/add-pr-comment@v2
        with:
          message-path: |
            ./report.md